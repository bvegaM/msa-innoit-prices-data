openapi: 3.0.3
info:
  title: Swagger Client - OpenAPI 3.0
  description: |-
    <div style="text-align: justify;">
      <h3>Client and Person Management</h3>
    
      <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo68hG9vrsEJvHAlMFTRYVE2nDNWm7COeSpjDX5IALFYJtMngug6VUTTECfi0hlJYGVQ&usqp=CAU" alt="Image" align="right" width="400"/>
    
      <p>This is a contract to manage prices rate of products based on the OpenAPI 3.0 specification.This is a contract that uses the API First-Contract principle to standardize the creation of endpoints to be used in our service and improve the development of our APIs.</p> 
    </div>
  termsOfService: http://swagger.io/terms/
  contact:
    email: vegabryam40@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0 - SNAPSHOT

servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: prices
    description: Everything about price rate

paths:
  /prices/applicable:
    get:
      tags:
        - prices
      summary: Query applicable price for a product on a specific date and brand
      description: Returns the applicable price, date range, and corresponding rate based on the input parameters.
      parameters:
        - name: applicationDate
          in: query
          required: true
          description: Date and time of application in ISO 8601 format (e.g., 2020-06-14T10:00:00).
          schema:
            type: string
            pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$'
        - name: productId
          in: query
          required: true
          description: Product identifier.
          schema:
            type: integer
        - name: brandId
          in: query
          required: true
          description: Brand identifier.
          schema:
            type: integer
      responses:
        '200':
          description: Price found successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceDto'
        '400':
          description: Invalid date format or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No applicable price found.

components:
  schemas:
    PriceDto:
      type: object
      properties:
        productId:
          type: integer
          description: Product identifier.
        brandId:
          type: integer
          description: Brand identifier.
        priceList:
          type: integer
          description: Identifier of the applied rate.
        startDate:
          type: string
          description: Start date of the rate application.
        endDate:
          type: string
          description: End date of the rate application.
        price:
          type: number
          format: float
          description: Final applied price.
    Error:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        status:
          type: integer
    ErrorDetail:
      type: object
      properties:
        message:
          type: string
